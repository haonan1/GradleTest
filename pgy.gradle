import groovy.json.JsonSlurper

/**
 *
 * @param filePath
 * @param buildChannelShortcut 蒲公英上创建的渠道名，用于分发不同类型的 apk 包
 * @return
 */
private def uploadPGY(String filePath, String buildChannelShortcut) {
    println "uploadPGY filePath：" + filePath

    def stdout = new ByteArrayOutputStream()
    exec {
        executable = 'curl'
        args = ['-F', "file=@${filePath}", '-F', "_api_key=${rootProject.ext.pgy["apiKey"]}", '-F', 'buildInstallType=2', '-F', 'buildPassword=Password', '-F', "buildChannelShortcut=${buildChannelShortcut}", rootProject.ext.pgy["uploadUrl"]]
        standardOutput = stdout
    }
    String output = stdout.toString()
    println output
    def parsedJson = new JsonSlurper().parseText(output)
    println parsedJson.data.buildQRCodeURL
    println "buildVersion: " + parsedJson.data.buildVersion
    println "buildVersionNo: " + parsedJson.data.buildVersionNo
}

private def getApkFile(String fileDir) {
    def dir = new File(file(fileDir), "channels")
    if (!dir.exists()) {
        println "dir not exists：" + dir.path
        return null
    }
    File[] files = dir.listFiles(new FileFilter() {
        @Override
        boolean accept(File file) {
            return file.isFile() && file.name.endsWith(".apk")
        }
    })
    if (files == null || files.size() == 0) {
        println "files == null ||  files.size() == 0"
        return null
    }
    return files[0]
}


/**
 * 执行 “uploadApp1Admin” 命令自动打超管服包，并上传到蒲公英
 */
task uploadApp1Admin(dependsOn: 'jiaGuApp1Admin') {
    group = "publish"

    doLast {
        def apkFile = getApkFile(rootProject.ext.jiagu["app1AdminOutputPath"])
        if (apkFile != null) {
            uploadPGY(apkFile.absolutePath, "")
        }
    }
}

/**
 * 执行 “uploadApp2Admin” 命令自动打超管服包，并上传到蒲公英
 */
task uploadApp2Admin(dependsOn: 'jiaGuApp2Admin') {
    group = "publish"

    doLast {
        def apkFile = getApkFile(rootProject.ext.jiagu["app2AdminOutputPath"])
        if (apkFile != null) {
            uploadPGY(apkFile.absolutePath, "")
        }
    }
}



